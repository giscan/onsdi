version: '3.4'
services:

  db:
    image: geonode/postgis:10
    restart: on-failure
    container_name: db4${COMPOSE_PROJECT_NAME}
    stdin_open: true
    # tty: true
    labels:
        org.geonode.component: db
        org.geonode.instance.name: geonode
    volumes:
      - dbdata:/var/lib/postgresql/data
      - dbbackups:/pg_backups
    env_file:
      - ./scripts/docker/env/production/db.env

  geoserver:
    image: olivierdalang/spcgeonode:geoserver-latest
    build: ./geoserver/
    healthcheck:
      test: "curl --fail --silent --write-out 'HTTP CODE : %{http_code}\n' --output /dev/null http://127.0.0.1:8080/geoserver/rest/workspaces/geonode.html"
      interval: 60s
      timeout: 10s
      retries: 1
      start_period: 60s
    container_name: geoserver4${COMPOSE_PROJECT_NAME}
    stdin_open: true
    # tty: true
    labels:
        org.geonode.component: geoserver
        org.geonode.instance.name: geonode
    depends_on:
      - db
      - data-dir-conf
    volumes:
      - geodatadir:/spcgeonode-geodatadir/
    env_file:
      - ./scripts/docker/env/production/geoserver.env
    restart: on-failure

  django:
    restart: on-failure
    build: .
    container_name: django4${COMPOSE_PROJECT_NAME}
    stdin_open: true
    # tty: true
    labels:
      org.geonode.component: django
      org.geonode.instance.name: geonode
    depends_on:
      - db
      - data-dir-conf
    # command: paver start_django -b 0.0.0.0:8000
    # command: uwsgi --ini uwsgi.ini
    volumes:
      - statics:/mnt/volumes/statics
      - geodatadir:/spcgeonode-geodatadir/
    env_file:
      - ./scripts/docker/env/production/django.env

  geonode:
    image: olivierdalang/spcgeonode:nginx-latest
    build: ./nginx/
    restart: on-failure
    container_name: nginx4${COMPOSE_PROJECT_NAME}
    stdin_open: true
    # tty: true
    labels:
        org.geonode.component: nginx
        org.geonode.instance.name: geonode
    depends_on:
      - django
      - geoserver
    ports:
      - "${HTTP_PORT}:80"
      - "${HTTPS_PORT}:443"
    volumes:
      - statics:/mnt/volumes/statics
      - certificates:/spcgeonode-certificates/
    environment:
      - HTTPS_HOST=${HTTPS_HOST}
      - HTTP_HOST=${HTTP_HOST}
      - LETSENCRYPT_MODE=${LETSENCRYPT_MODE}
      - RESOLVER=127.0.0.11

# Gets and installs letsencrypt certificates
  letsencrypt:
    image: olivierdalang/spcgeonode:letsencrypt-latest
    build: ./letsencrypt/
    environment:
      - HTTPS_HOST=${HTTPS_HOST}
      - HTTP_HOST=${HTTP_HOST}
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - LETSENCRYPT_MODE=${LETSENCRYPT_MODE}
    volumes:
      - certificates:/spcgeonode-certificates/
    restart: on-failure

  data-dir-conf:
    image: geonode/geoserver_data:2.14.x
    restart: on-failure
    container_name: gsconf4${COMPOSE_PROJECT_NAME}
    labels:
        org.geonode.component: conf
        org.geonode.instance.name: geonode
    command: /bin/true
    volumes:
      - geodatadir:/spcgeonode-geodatadir/

volumes:
  statics:
    name: ${COMPOSE_PROJECT_NAME}-statics
  geodatadir:
    name: ${COMPOSE_PROJECT_NAME}-gsdocdatadir
  dbdata:
    name: ${COMPOSE_PROJECT_NAME}-dbdata
  dbbackups:
    name: ${COMPOSE_PROJECT_NAME}-dbbackups
  rabbitmq:
    name: ${COMPOSE_PROJECT_NAME}-rabbitmq
  certificates:
    name: ${COMPOSE_PROJECT_NAME}-certificates
